# evaluate arguments
ept <- function(x) eval(parse(text=x),env=0)
args <- commandArgs(T)
for(arg in args) ept(arg)
# if required args are missing, stop
requiredArgs <- c("path","taskPath","task","id","date","eyescoreFunctions")
for(arg in requiredArgs) if(!(arg %in% ls())) stop(arg," is missing")

# write all output to log (commenting out because doing logging in bash script)
  # tried to make sure that only errors will be present (some suppression of messages from warnings, startup, packages)
#sink(logFile, append=T)

# load eyescore functions
source(eyescoreFunctions)
# convenience function for concatenating data frames stored as elements in a list
list2data <- function(l) { d<-cbind(l[[1]],listInd=1); if(length(l)>1) for(i in 2:length(l)) d<-rbind(d, cbind(l[[i]],listInd=i)); d }

# load task data
taskData <- taskList[[task]](path=taskPath)

# get file names and loop through runs
files <- basename(Sys.glob(file.path(path, "*raw.txt")))
scoredList <- list()
for(file in files){
  filePrefix <- gsub("_raw.txt", "", file)

  ## NOTE: all the try statements check if there is an error, and if so, write it to the logfile, otherwise continue

  # convert from eyd to txt (done already)
  #eyeData <- try(
  #  eyd2txt(id, date, task, run, eydScript="~/src/autoeyescore/dataFromAnyEyd.pl", srcPath="~/rcn/bea_res/Data/Tasks", fileNaming=c("id","date","task","Run"), fileDelim="_", fileExt="raw.txt", txtPath=NULL, txtFile=NULL, overwrite=F),
  #  silent=T)
  #if(class(eyeData)!="data.frame") { cat(date(), "\n", filePrefix, "eyeData_raw", "\n", eyeData, "\n\n"); next } 

  # preprocess data
  eyeData <- try(
    preprocessEyd(read.table(file.path(path, file), head=T), outputTable=file.path(path, paste(filePrefix, "preproc.txt", sep="_"))),
    silent=T)
  if(class(eyeData)!="data.frame") { cat(date(), "\n", filePrefix, "eyeData_preproc", "\n", eyeData, "\n\n"); next } 

  # get saccades
  saccades <- try(getSaccades(eyeData), silent=T)
  if(class(saccades)!="data.frame") { cat(date(), "\n", filePrefix, "saccades", "\n", saccades, "\n\n"); next } 

  # score saccades
  saccades <- try(
    scoreSaccades(task, eyeData, saccades, outputTable=file.path(path, paste(filePrefix, "saccades.txt", sep="_"))),
    silent=T)
  if(class(saccades)=="data.frame") scoredList[[which(files %in% file)]] <- saccades else { cat(date(), "\n", filePrefix, "saccades_scored", "\n", saccades, "\n\n"); next }

  # get timing files
  timings <- try(writeTimings(filePrefix, task, eyeData, saccades), silent=T)
  if(!is.null(timings)) { cat(date(), "\n", filePrefix, "timings", "\n", timings, "\n\n"); next } 
}

# run stats on all the scored runs
if(length(scoredList)>0) try(
  stats <- summaryData(task, list2data(scoredList), outputTable=file.path(path, paste(id, date, task, "stats.txt", sep="_")))
  silent=T)
if(class(stats)!="data.frame") { cat(date(), "\n", filePrefix, "stats", "\n", stats, "\n\n"); next }

# close log file (commented out, as per above)
#sink()
